/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
/home/soumyadeep/LexiQL/modules/sentiment_analysis_circuits.py:27: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  e_weights = torch.tensor(trained_encoder.weights.detach(), requires_grad=False)
